version: 2.1

executors:
  python-executor:
    working_directory: ~/code
    machine:
      docker_layer_caching: false
      image: "circleci/classic:201808-01"

commands:
  save-eggs-cache:
    description: "Save the .eggs directory after tests"
    steps:
      - save_cache:
          key: v1-test-eggs-cache-{{ checksum "app/requirements.txt" }}-{{ checksum "app/test_requirements.txt" }}
          paths:
            - ~/code/.eggs
  restore-eggs-cache:
    description: "Load .eggs cache"
    steps:
      - restore_cache:
          keys:
            - v1-test-eggs-cache-{{ checksum "app/requirements.txt" }}-{{ checksum "app/test_requirements.txt" }}
  save-venv-cache:
    description: "Save the virtualenv"
    steps:
      - save_cache:
          key: v1-cache-{{ checksum "app/requirements.txt" }}-{{ checksum "app/test_requirements.txt" }}
          paths:
            - ~/code/venv
  restore-venv-cache:
    description: "Restore the virtualenv"
    steps:
      - restore_cache:
          keys:
            - v1-cache-{{ checksum "app/requirements.txt" }}-{{ checksum "app/test_requirements.txt" }}
  run-test:
    description: "Run a group of tests, ie 'formatting'."
    parameters:
      for:
        type: string
        default: all
    steps:
      - checkout
      - restore-venv-cache
      - restore-eggs-cache
      - run:
          name: Test
          command: |
            source ~/code/venv/bin/activate
            python setup.py test<< parameters.for >>
      - run:
          name: Move coverage report to workspace
          command: |
            mkdir /tmp/coverage-reports
            mv ./coverage.xml /tmp/coverage-reports/<< parameters.for >>-coverage.xml
      - persist_to_workspace:
          root: /tmp/coverage-reports
          paths:
            - ./*-coverage.xml
      - save-eggs-cache
  upload-coverage-reports:
    description: "Upload the coverage reports"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/coverage-reports
      - run:
          name: "Upload coverage reports"
          command: |
            cp /tmp/coverage-reports/*.xml .
            bash <(curl -s https://codecov.io/bash)
jobs:

  # Make documentation
  make-docs:
    machine:
      docker_layer_caching: false
    environment:
      LATIGO_PROD_MODE: true
      DOCKER_REGISTRY: docker.io
      DOCKER_REPO: equinor
    steps:
      - checkout
      - run:
          name: Make documentation
          command: make make-docs

  # Make the docker images this project uses.
  make-images:
    machine:
      docker_layer_caching: false
    steps:
      - checkout
      - run:
          name: Make Images
          command: make images

  # Push images, only when on master and/or tagged commits.
  push-images:
    machine:
      docker_layer_caching: false
    environment:
      LATIGO_PROD_MODE: true
      DOCKER_REGISTRY: docker.io
      DOCKER_REPO: equinor
    steps:
      - checkout
      - run:
          name: Push Images
          command: |
            make push-executor
            make push-scheduler

  # Publish to PyPi, only on tagged commits.
  publish-to-pypi:
    executor: python-executor
    steps:
      - checkout
      - restore-venv-cache
      - run:
          name: Build
          command: |
            source ~/code/venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          # Requires TWINE_PASSWORD to be set.
          name: Publish
          command: |
            source ~/code/venv/bin/activate
            python -m pip install twine
            twine upload -u statoil-travis --skip-existing dist/*

  # Install step, before any tests are run to create the cache
  install:
    executor: python-executor
    steps:
      - checkout
      - restore-venv-cache
      - run:
          name: Set Python Version
          command: |
            pyenv versions
            pyenv global 3.6.5
            pyenv versions
      - run:
          name: Virtual Environment
          command: |
            python -m venv ~/code/venv
            echo "source ~/code/venv/bin/activate" >> $BASH_ENV
      - run: pip install --upgrade pip
      - run:
          name: Install Requirements
          command: |
            echo $(which python)
            pwd
            pip install -r app/requirements.txt
      - run:
          name: Test Requirements
          command: |
            echo $(which python)
            pip install -r app/test_requirements.txt
      - save-venv-cache

  # Specific collections of python tests
  test-builder:
    executor: python-executor
    steps:
      - run-test:
          for: builder

  upload-coverage-reports:
    executor: python-executor
    steps:
      - upload-coverage-reports

workflows:
  version: 2.1

  # Run all tests, ensure images and docs can be built
  test:
    jobs:
      - make-docs
      - install
      - test-builder:
          requires:
            - install
      - make-images:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - upload-coverage-reports:
          requires:
            - test-builder
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - push-images:
          requires:
            - make-images
            - upload-coverage-reports
          filters:
            branches:
              only:
                - master
            tags:
              only: /.*/
#      - publish-to-pypi:
#          requires:
#            - push-images
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#               only: /.*/
